{"version":3,"file":"static/webpack/static/development/pages/register.js.913c8780faf3fdbfbc93.hot-update.js","sources":["webpack:///./pages/register.js"],"sourcesContent":["import React, { Fragment, Component } from 'react';\nimport Head from 'next/head';\nimport Sticky from 'react-stickynode';\nimport { ThemeProvider } from 'styled-components';\nimport { charityTheme } from '../common/src/theme/charity';\nimport { ResetCSS } from '../common/src/assets/css/style';\nimport { DrawerProvider } from '../common/src/contexts/DrawerContext';\nimport Navbar from '../containers/Charity/Navbar';\nimport DrawerSection from '../containers/Charity/DrawerSection';\nimport BannerSection from '../containers/Charity/BannerSection';\nimport FeatureSection from '../containers/Charity/FeatureSection';\nimport BranchSection from '../containers/Charity/BranchSection';\nimport WorkSection from '../containers/Charity/WorkSection';\nimport PromotionBlock from '../containers/Charity/PromotionBlock';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport TextField from '@material-ui/core/TextField';\nimport PropTypes from 'prop-types';\nimport Footer from '../containers/Charity/Footer';\nimport Container from '../common/src/components/UI/Container';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Box from '@material-ui/core/Box';\nimport PaystackButton from 'react-paystack';\nimport Radio from '@material-ui/core/Radio';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormLabel from '@material-ui/core/FormLabel';\nimport {\n  GlobalStyle,\n  CharityWrapper,\n  ContentWrapper\n} from '../containers/Charity/charity.style';\nimport states from '../components/StatesAndLGA';\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1)\n  },\n  dense: {\n    marginTop: theme.spacing(2)\n  },\n  menu: {\n    width: 200\n  }\n}));\n\nconst Register = ({ row, col }, shows) => {\n  const classes = useStyles();\n  const [values, setValues] = React.useState({\n    firstname: 'Omotayo',\n    middlename: '',\n    lastname: '',\n    email: '',\n    phone: '',\n    stateOfOrigin: '',\n    residence: '',\n    lga: ''\n  });\n  const lgaList =\n    values.stateOfOrigin !== ''\n      ? states[values.stateOfOrigin]\n      : states['Abia State'];\n  const handleChange = name => event => {\n    setValues({ ...values, [name]: event.target.value });\n  };\n  return (\n    <ThemeProvider theme={charityTheme}>\n      <Fragment>\n        {/* Start charity head section */}\n        <Head>\n          <title>GIAD | Global Initiative Axgainst Disasters</title>\n          <meta\n            name=\"Description\"\n            content=\"GIAD | Global Initiative Axgainst Disasters\"\n          />\n          <meta name=\"theme-color\" content=\"#0071bc\" />\n          <meta\n            name=\"viewport\"\n            content=\"width=device-width, initial-scale=1.0\"\n          />\n          {/* Load google fonts */}\n          <link\n            href=\"https://fonts.googleapis.com/css?family=Open+Sans:300,400,600,700,800&display=swap\"\n            rel=\"stylesheet\"\n          />\n        </Head>\n        <ResetCSS />\n        <GlobalStyle />\n        {/* End of charity head section */}\n        {/* Start charity wrapper section */}\n        <CharityWrapper>\n          <Sticky top={0} innerZ={9999} activeClass=\"sticky-nav-active\">\n            <Navbar />\n          </Sticky>\n          <DrawerProvider>\n            <DrawerSection />\n          </DrawerProvider>\n          <ContentWrapper>\n            <PromotionBlock />\n            <Container width=\"1260px\">\n              <form className={classes.container} autoComplete=\"off\">\n                <Box width=\"30%\" m={2}>\n                  {' '}\n                  <TextField\n                    fullWidth\n                    id=\"outlined-name\"\n                    label=\"First Name\"\n                    className={classes.textField}\n                    value={values.firstname}\n                    onChange={handleChange('firstname')}\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                  />\n                </Box>\n                <Box width=\"30%\" m={2}>\n                  <TextField\n                    fullWidth\n                    id=\"outlined-name\"\n                    label=\"Middle Name\"\n                    className={classes.textField}\n                    value={values.middlename}\n                    onChange={handleChange('middlename')}\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                  />\n                </Box>\n                <Box width=\"30%\" m={2}>\n                  <TextField\n                    fullWidth\n                    id=\"outlined-name\"\n                    label=\"Last Name\"\n                    className={classes.textField}\n                    value={values.lastname}\n                    onChange={handleChange('lastname')}\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                  />\n                </Box>\n                <Box width=\"30%\" m={2}>\n                  <TextField\n                    fullWidth\n                    id=\"outlined-name\"\n                    label=\"Phone Number\"\n                    className={classes.textField}\n                    value={values.phone}\n                    onChange={handleChange('phone')}\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                  />\n                </Box>\n                <Box width=\"30%\" m={2}>\n                  <TextField\n                    fullWidth\n                    id=\"outlined-name\"\n                    label=\"email\"\n                    className={classes.textField}\n                    value={values.email}\n                    onChange={handleChange('email')}\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                  />\n                </Box>\n                <Box width=\"90%\" m={2}>\n                  <TextField\n                    fullWidth\n                    id=\"outlined-full-width\"\n                    label=\"Permanent Residential address\"\n                    style={{ margin: 8 }}\n                    placeholder=\"Permanent Residential address\"\n                    value={values.residence}\n                    onChange={handleChange('residence')}\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                    InputLabelProps={{\n                      shrink: true\n                    }}\n                  />\n                </Box>\n\n                <Box width=\"30%\" m={2}>\n                  <TextField\n                    fullWidth\n                    id=\"outlined-select-state\"\n                    select\n                    label=\"Local Government\"\n                    className={classes.textField}\n                    value={values.lga}\n                    onChange={handleChange('lga')}\n                    SelectProps={{\n                      MenuProps: {\n                        className: classes.menu\n                      }\n                    }}\n                    helperText=\"Please select your Local Government\"\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                  >\n                    {lgaList.map(lga => (\n                      <MenuItem key={lga} value={lga}>\n                        {lga}\n                      </MenuItem>\n                    ))}\n                  </TextField>\n                </Box>\n                <Box width=\"30%\" m={2}>\n                  <TextField\n                    fullWidth\n                    id=\"outlined-name\"\n                    label=\"Means of Identification\"\n                    className={classes.textField}\n                    value={values.identification}\n                    onChange={handleChange('identification')}\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                  />\n                </Box>\n                <Box width=\"30%\" m={2}>\n                  <TextField\n                    fullWidth\n                    id=\"outlined-name\"\n                    label=\"ID Number\"\n                    className={classes.textField}\n                    value={values.idNumber}\n                    onChange={handleChange('idNumber')}\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                  />\n                </Box>\n\n                <Box width=\"30%\" m={2}>\n                  <TextField\n                    fullWidth\n                    id=\"outlined-name\"\n                    label=\"Nationality at Birth\"\n                    className={classes.textField}\n                    value={values.nationalityAtBirth}\n                    onChange={handleChange('nationalityAtBirth')}\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                  />\n                </Box>\n                <Box width=\"30%\" m={2}>\n                  <TextField\n                    fullWidth\n                    id=\"outlined-name\"\n                    label=\"Current Nationality\"\n                    className={classes.textField}\n                    value={values.currentNationality}\n                    onChange={handleChange('currentNationality')}\n                    margin=\"normal\"\n                    variant=\"outlined\"\n                  />\n                </Box>\n              </form>\n              <Box width=\"30%\" m={3}>\n                <Payment />\n              </Box>\n            </Container>\n          </ContentWrapper>\n          <Footer />\n        </CharityWrapper>\n        {/* End of charity wrapper section */}\n      </Fragment>\n    </ThemeProvider>\n  );\n};\n\n// Index.getInitialProps = async function({ ctx }) {\n//   const res = await fetch('https://api.tvmaze.com/search/shows?q=batman');\n//   const data = await res.json();\n\n//   console.log(`Show data fetched. Count: ${data.length}`);\n\n//   return {\n//     shows: data.map(entry => entry.show)\n//   };\n// };\n\n// PromotionBlock style props\nRegister.propTypes = {\n  row: PropTypes.object,\n  col: PropTypes.object\n};\n\n// PromotionBlock default style\nRegister.defaultProps = {\n  // PromotionBlock row default style\n  row: {\n    flexBox: true,\n    flexWrap: 'wrap',\n    ml: '-15px',\n    mr: '-15px'\n  },\n  // PromotionBlock col default style\n  col: {\n    width: ['100%', '50%', '50%'],\n    pl: '15px',\n    pr: '15px',\n    mb: '30px'\n  }\n};\nexport default Register;\n\nclass Payment extends Component {\n  state = {\n    key: 'pk_live_efd0e8585b6a1467dfd3f439385842a18223080b', //PAYSTACK PUBLIC KEY\n    email: 'user@pacmgiad.com', // customer email\n    amount: 5000000 //equals NGN100,\n  };\n\n  callback = response => {\n    console.log(response); // card charged successfully, get reference here\n  };\n\n  close = () => {\n    console.log('Payment closed');\n  };\n\n  getReference = () => {\n    //you can put any unique reference implementation code here\n    let text = '';\n    let possible =\n      'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-.=';\n\n    for (let i = 0; i < 15; i++)\n      text += possible.charAt(Math.floor(Math.random() * possible.length));\n\n    return text;\n  };\n\n  render() {\n    return (\n      <div>\n        <PaystackButton\n          class=\"butn\"\n          text=\"Register\"\n          callback={this.callback}\n          close={this.close}\n          disabled={false}\n          embed={false}\n          reference={this.getReference()}\n          email={this.state.email}\n          amount={this.state.amount}\n          paystackkey={this.state.key}\n          tag=\"button\"\n        ></PaystackButton>\n      </div>\n    );\n  }\n}\n"],"mappings":"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A;AACA;AACA;AACA;AACA;AACA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAGA;AACA;AAEA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AADA;AACA;AACA;AAFA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AAJA;AATA;AAgBA;AACA;AACA;;;;;;;;;;;;;;;;;;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAJA;AACA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AADA;AACA;AAEA;AACA;AACA;;;;;;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAXA;AAAA;AAAA;AAAA;AAAA;AAAA;AAeA;;;;AA7CA;;;;A","sourceRoot":""}