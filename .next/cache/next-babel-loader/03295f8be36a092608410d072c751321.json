{"ast":null,"code":"var _jsxFileName = \"/Users/developer1/apps/giadFrontend/package/containers/Charity/DrawerSection/index.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useContext } from 'react';\nimport Scrollspy from 'react-scrollspy';\nimport AnchorLink from 'react-anchor-link-smooth-scroll';\nimport Drawer from '../../../reusecore/src/elements/Drawer';\nimport Image from '../../../reusecore/src/elements/Image';\nimport { DrawerContext } from '../../../common/src/contexts/DrawerContext';\nimport InnerWrapper, { SpreadButton } from './drawerSection.style';\nimport Link from 'next/link';\nimport { menuItems } from '../../../common/src/data/Charity';\nimport heartImage from '../../../common/src/assets/image/charity/heart-red.png';\n\nvar DrawerSection = function DrawerSection() {\n  var _useState = useState(false),\n      toggleState = _useState[0],\n      setToggleState = _useState[1];\n\n  var _useContext = useContext(DrawerContext),\n      state = _useContext.state,\n      dispatch = _useContext.dispatch;\n\n  var handleActiveClass = function handleActiveClass() {\n    setToggleState(!toggleState);\n  };\n\n  var handleDrawerToggle = function handleDrawerToggle() {\n    dispatch({\n      type: 'TOGGLE'\n    });\n    handleActiveClass();\n  };\n\n  var scrollItems = [];\n  menuItems.forEach(function (item) {\n    scrollItems.push(item.path.slice(1));\n  });\n  return __jsx(Drawer, {\n    width: \"420px\",\n    placement: \"right\",\n    drawerHandler: __jsx(\"button\", {\n      className: \"drawer_btn \".concat(toggleState ? 'active' : ''),\n      onClick: handleActiveClass,\n      \"aria-label\": \"drawer toggle button\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, __jsx(\"ul\", {\n      className: \"grid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, __jsx(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }), __jsx(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }), __jsx(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }), __jsx(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }), __jsx(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }), __jsx(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), __jsx(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }), __jsx(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }), __jsx(\"li\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    })), __jsx(\"i\", {\n      className: \"flaticon-plus-symbol \",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    })),\n    open: state.isOpen,\n    toggleHandler: handleDrawerToggle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, __jsx(InnerWrapper, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, __jsx(Scrollspy, {\n    className: \"scrollspy__menu\",\n    items: scrollItems,\n    offset: -81,\n    currentClassName: \"active\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, menuItems.map(function (menu, index) {\n    return __jsx(\"li\", {\n      key: \"menu_key\".concat(index),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, __jsx(AnchorLink, {\n      href: menu.path,\n      offset: menu.offset,\n      onClick: handleDrawerToggle,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    }, menu.label));\n  }))));\n};\n\nexport default DrawerSection;","map":{"version":3,"sources":["/Users/developer1/apps/giadFrontend/package/containers/Charity/DrawerSection/index.js"],"names":["React","useState","useContext","Scrollspy","AnchorLink","Drawer","Image","DrawerContext","InnerWrapper","SpreadButton","Link","menuItems","heartImage","DrawerSection","toggleState","setToggleState","state","dispatch","handleActiveClass","handleDrawerToggle","type","scrollItems","forEach","item","push","path","slice","isOpen","map","menu","index","offset","label"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AACA,OAAOC,UAAP,MAAuB,iCAAvB;AACA,OAAOC,MAAP,MAAmB,wCAAnB;AACA,OAAOC,KAAP,MAAkB,uCAAlB;AACA,SAASC,aAAT,QAA8B,4CAA9B;AACA,OAAOC,YAAP,IAAuBC,YAAvB,QAA2C,uBAA3C;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAASC,SAAT,QAA0B,kCAA1B;AACA,OAAOC,UAAP,MAAuB,wDAAvB;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAAA,kBACYZ,QAAQ,CAAC,KAAD,CADpB;AAAA,MACnBa,WADmB;AAAA,MACNC,cADM;;AAAA,oBAEEb,UAAU,CAACK,aAAD,CAFZ;AAAA,MAElBS,KAFkB,eAElBA,KAFkB;AAAA,MAEXC,QAFW,eAEXA,QAFW;;AAI1B,MAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM;AAC9BH,IAAAA,cAAc,CAAC,CAACD,WAAF,CAAd;AACD,GAFD;;AAIA,MAAMK,kBAAkB,GAAG,SAArBA,kBAAqB,GAAM;AAC/BF,IAAAA,QAAQ,CAAC;AACPG,MAAAA,IAAI,EAAE;AADC,KAAD,CAAR;AAGAF,IAAAA,iBAAiB;AAClB,GALD;;AAOA,MAAMG,WAAW,GAAG,EAApB;AAEAV,EAAAA,SAAS,CAACW,OAAV,CAAkB,UAAAC,IAAI,EAAI;AACxBF,IAAAA,WAAW,CAACG,IAAZ,CAAiBD,IAAI,CAACE,IAAL,CAAUC,KAAV,CAAgB,CAAhB,CAAjB;AACD,GAFD;AAIA,SACE,MAAC,MAAD;AACE,IAAA,KAAK,EAAC,OADR;AAEE,IAAA,SAAS,EAAC,OAFZ;AAGE,IAAA,aAAa,EACX;AACE,MAAA,SAAS,uBAAgBZ,WAAW,GAAG,QAAH,GAAc,EAAzC,CADX;AAEE,MAAA,OAAO,EAAEI,iBAFX;AAGE,oBAAW,sBAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKE;AAAI,MAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,EAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MARF,EASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MATF,CALF,EAgBE;AAAG,MAAA,SAAS,EAAC,uBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAhBF,CAJJ;AAuBE,IAAA,IAAI,EAAEF,KAAK,CAACW,MAvBd;AAwBE,IAAA,aAAa,EAAER,kBAxBjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KA0BE,MAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AACE,IAAA,SAAS,EAAC,iBADZ;AAEE,IAAA,KAAK,EAAEE,WAFT;AAGE,IAAA,MAAM,EAAE,CAAC,EAHX;AAIE,IAAA,gBAAgB,EAAC,QAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMGV,SAAS,CAACiB,GAAV,CAAc,UAACC,IAAD,EAAOC,KAAP;AAAA,WACb;AAAI,MAAA,GAAG,oBAAaA,KAAb,CAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,UAAD;AACE,MAAA,IAAI,EAAED,IAAI,CAACJ,IADb;AAEE,MAAA,MAAM,EAAEI,IAAI,CAACE,MAFf;AAGE,MAAA,OAAO,EAAEZ,kBAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKGU,IAAI,CAACG,KALR,CADF,CADa;AAAA,GAAd,CANH,CADF,CA1BF,CADF;AAqDD,CA1ED;;AA4EA,eAAenB,aAAf","sourcesContent":["import React, { useState, useContext } from 'react';\r\nimport Scrollspy from 'react-scrollspy';\r\nimport AnchorLink from 'react-anchor-link-smooth-scroll';\r\nimport Drawer from '../../../reusecore/src/elements/Drawer';\r\nimport Image from '../../../reusecore/src/elements/Image';\r\nimport { DrawerContext } from '../../../common/src/contexts/DrawerContext';\r\nimport InnerWrapper, { SpreadButton } from './drawerSection.style';\r\nimport Link from 'next/link';\r\nimport { menuItems } from '../../../common/src/data/Charity';\r\nimport heartImage from '../../../common/src/assets/image/charity/heart-red.png';\r\n\r\nconst DrawerSection = () => {\r\n  const [toggleState, setToggleState] = useState(false);\r\n  const { state, dispatch } = useContext(DrawerContext);\r\n\r\n  const handleActiveClass = () => {\r\n    setToggleState(!toggleState);\r\n  };\r\n\r\n  const handleDrawerToggle = () => {\r\n    dispatch({\r\n      type: 'TOGGLE'\r\n    });\r\n    handleActiveClass();\r\n  };\r\n\r\n  const scrollItems = [];\r\n\r\n  menuItems.forEach(item => {\r\n    scrollItems.push(item.path.slice(1));\r\n  });\r\n\r\n  return (\r\n    <Drawer\r\n      width=\"420px\"\r\n      placement=\"right\"\r\n      drawerHandler={\r\n        <button\r\n          className={`drawer_btn ${toggleState ? 'active' : ''}`}\r\n          onClick={handleActiveClass}\r\n          aria-label=\"drawer toggle button\"\r\n        >\r\n          <ul className=\"grid\">\r\n            <li />\r\n            <li />\r\n            <li />\r\n            <li />\r\n            <li />\r\n            <li />\r\n            <li />\r\n            <li />\r\n            <li />\r\n          </ul>\r\n          <i className=\"flaticon-plus-symbol \" />\r\n        </button>\r\n      }\r\n      open={state.isOpen}\r\n      toggleHandler={handleDrawerToggle}\r\n    >\r\n      <InnerWrapper>\r\n        <Scrollspy\r\n          className=\"scrollspy__menu\"\r\n          items={scrollItems}\r\n          offset={-81}\r\n          currentClassName=\"active\"\r\n        >\r\n          {menuItems.map((menu, index) => (\r\n            <li key={`menu_key${index}`}>\r\n              <AnchorLink\r\n                href={menu.path}\r\n                offset={menu.offset}\r\n                onClick={handleDrawerToggle}\r\n              >\r\n                {menu.label}\r\n              </AnchorLink>\r\n            </li>\r\n          ))}\r\n        </Scrollspy>\r\n        {/* <SpreadButton>\r\n          <span className=\"text\">SPREAD</span>\r\n          <Image src={heartImage} alt=\"Charity Landing\" />\r\n        </SpreadButton> */}\r\n      </InnerWrapper>\r\n    </Drawer>\r\n  );\r\n};\r\n\r\nexport default DrawerSection;\r\n"]},"metadata":{},"sourceType":"module"}