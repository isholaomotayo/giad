{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/developer1/apps/giadFrontend/package/pages/_app.js\";\nvar __jsx = React.createElement;\nimport React, { Fragment } from 'react';\nimport { Modal } from '@redq/reuse-modal';\nimport '@redq/reuse-modal/es/index.css';\nimport { ApolloProvider } from 'react-apollo';\nimport withData from '../lib/withData';\nimport App, { Container } from 'next/app'; // const App = ({ Component, pageProps }) => {\n//   return (\n//     <Fragment>\n//       <Modal />\n//       <Component {...pageProps} />\n//     </Fragment>\n//   );\n// };\n// App.getInitialProps = async ({ Component, ctx }) => {\n//   let pageProps = {};\n//   if (Component.getInitialProps) {\n//     pageProps = await Component.getInitialProps(ctx);\n//   }\n//   return { pageProps };\n// };\n\nvar MyApp =\n/*#__PURE__*/\nfunction (_App) {\n  _inherits(MyApp, _App);\n\n  function MyApp() {\n    _classCallCheck(this, MyApp);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(MyApp).apply(this, arguments));\n  }\n\n  _createClass(MyApp, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          Component = _this$props.Component,\n          apollo = _this$props.apollo,\n          pageProps = _this$props.pageProps;\n      return __jsx(ApolloProvider, {\n        client: apollo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, __jsx(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, __jsx(Modal, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }), __jsx(Component, _extends({}, pageProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }))));\n    }\n  }], [{\n    key: \"getInitialProps\",\n    value: function () {\n      var _getInitialProps = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(_ref) {\n        var Component, ctx, pageProps;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                Component = _ref.Component, ctx = _ref.ctx;\n                pageProps = {};\n\n                if (!Component.getInitialProps) {\n                  _context.next = 6;\n                  break;\n                }\n\n                _context.next = 5;\n                return Component.getInitialProps(ctx);\n\n              case 5:\n                pageProps = _context.sent;\n\n              case 6:\n                // this exposes the query to the user\n                pageProps.query = ctx.query;\n                return _context.abrupt(\"return\", {\n                  pageProps: pageProps\n                });\n\n              case 8:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function getInitialProps(_x) {\n        return _getInitialProps.apply(this, arguments);\n      }\n\n      return getInitialProps;\n    }()\n  }]);\n\n  return MyApp;\n}(App);\n\nexport default withData(MyApp);","map":{"version":3,"sources":["/Users/developer1/apps/giadFrontend/package/pages/_app.js"],"names":["React","Fragment","Modal","ApolloProvider","withData","App","Container","MyApp","props","Component","apollo","pageProps","ctx","getInitialProps","query"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,KAAT,QAAsB,mBAAtB;AACA,OAAO,gCAAP;AACA,SAASC,cAAT,QAA+B,cAA/B;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,OAAOC,GAAP,IAAcC,SAAd,QAA+B,UAA/B,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;IAEMC,K;;;;;;;;;;;;;6BAUK;AAAA,wBACkC,KAAKC,KADvC;AAAA,UACCC,SADD,eACCA,SADD;AAAA,UACYC,MADZ,eACYA,MADZ;AAAA,UACoBC,SADpB,eACoBA,SADpB;AAGP,aACE,MAAC,cAAD;AAAgB,QAAA,MAAM,EAAED,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,MAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAEE,MAAC,SAAD,eAAeC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAFF,CADF,CADF;AAQD;;;;;;;;;;;;AApB8BF,gBAAAA,S,QAAAA,S,EAAWG,G,QAAAA,G;AACpCD,gBAAAA,S,GAAY,E;;qBACZF,SAAS,CAACI,e;;;;;;uBACMJ,SAAS,CAACI,eAAV,CAA0BD,GAA1B,C;;;AAAlBD,gBAAAA,S;;;AAEF;AACAA,gBAAAA,SAAS,CAACG,KAAV,GAAkBF,GAAG,CAACE,KAAtB;iDACO;AAAEH,kBAAAA,SAAS,EAATA;AAAF,iB;;;;;;;;;;;;;;;;;;;EARSN,G;;AAuBpB,eAAeD,QAAQ,CAACG,KAAD,CAAvB","sourcesContent":["import React, { Fragment } from 'react';\r\nimport { Modal } from '@redq/reuse-modal';\r\nimport '@redq/reuse-modal/es/index.css';\r\nimport { ApolloProvider } from 'react-apollo';\r\nimport withData from '../lib/withData';\r\nimport App, { Container } from 'next/app';\r\n\r\n// const App = ({ Component, pageProps }) => {\r\n//   return (\r\n//     <Fragment>\r\n//       <Modal />\r\n//       <Component {...pageProps} />\r\n//     </Fragment>\r\n//   );\r\n// };\r\n\r\n// App.getInitialProps = async ({ Component, ctx }) => {\r\n//   let pageProps = {};\r\n//   if (Component.getInitialProps) {\r\n//     pageProps = await Component.getInitialProps(ctx);\r\n//   }\r\n//   return { pageProps };\r\n// };\r\n\r\nclass MyApp extends App {\r\n  static async getInitialProps({ Component, ctx }) {\r\n    let pageProps = {};\r\n    if (Component.getInitialProps) {\r\n      pageProps = await Component.getInitialProps(ctx);\r\n    }\r\n    // this exposes the query to the user\r\n    pageProps.query = ctx.query;\r\n    return { pageProps };\r\n  }\r\n  render() {\r\n    const { Component, apollo, pageProps } = this.props;\r\n\r\n    return (\r\n      <ApolloProvider client={apollo}>\r\n        <Fragment>\r\n          <Modal />\r\n          <Component {...pageProps} />\r\n        </Fragment>\r\n      </ApolloProvider>\r\n    );\r\n  }\r\n}\r\nexport default withData(MyApp);\r\n"]},"metadata":{},"sourceType":"module"}