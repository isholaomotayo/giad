{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport Head from 'next/head';\nimport ErrorSec from '../containers/Error';\nimport { ResetCSS } from '../common/src/assets/css/style';\nimport { withRouter } from 'next/router';\nimport Link from 'next/link';\n\nclass ErrorPage extends React.Component {\n  static propTypes() {\n    return {\n      errorCode: React.PropTypes.number.isRequired,\n      url: React.PropTypes.string.isRequired\n    };\n  }\n\n  static getInitialProps({\n    res,\n    xhr\n  }) {\n    const errorCode = res ? res.statusCode : xhr ? xhr.status : null;\n    return {\n      errorCode\n    };\n  }\n\n  render() {\n    var response;\n\n    switch (this.props.errorCode) {\n      case 200: // Also display a 404 if someone requests /_error explicitly\n\n      case 404:\n        response = __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"title\", null, \"404: Not found\"), __jsx(\"link\", {\n          href: \"https://fonts.googleapis.com/css?family=Lato:400,700|Poppins:400,500,600,700|Roboto:400,500,700&display=swap\",\n          rel: \"stylesheet\"\n        })), __jsx(ResetCSS, null), __jsx(\"div\", null, this.props.statusCode ? `An error ${this.props.statusCode} occurred on server` : __jsx(ErrorSec, null)));\n        break;\n\n      case 500:\n        response = __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"title\", null, \"500: Not found\"), __jsx(\"link\", {\n          href: \"https://fonts.googleapis.com/css?family=Lato:400,700|Poppins:400,500,600,700|Roboto:400,500,700&display=swap\",\n          rel: \"stylesheet\"\n        })), __jsx(ResetCSS, null), __jsx(\"div\", null, this.props.statusCode ? `An error ${this.props.statusCode} occurred on server` : __jsx(ErrorSec, null)));\n        break;\n\n      default:\n        response = __jsx(\"div\", null, __jsx(Head, null), __jsx(Container, {\n          className: \"pt-5 text-center\"\n        }, __jsx(\"h1\", {\n          className: \"display-4\"\n        }, \"HTTP \", this.props.errorCode, \" Error\"), __jsx(\"p\", null, \"An \", __jsx(\"strong\", null, \"HTTP \", this.props.errorCode), \" error occurred while trying to access\", ' ', __jsx(\"strong\", null, this.props.router.pathname))));\n    }\n\n    return response;\n  }\n\n}\n\nexport default withRouter(ErrorPage);","map":null,"metadata":{},"sourceType":"module"}