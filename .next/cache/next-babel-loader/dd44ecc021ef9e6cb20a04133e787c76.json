{"ast":null,"code":"var _jsxFileName = \"/Users/developer1/apps/giadFrontend/package/common/src/components/BlogPost/index.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nvar BlogPost = function BlogPost(_ref) {\n  var className = _ref.className,\n      thumbUrl = _ref.thumbUrl,\n      title = _ref.title,\n      excerpt = _ref.excerpt,\n      link = _ref.link; // Add all classs to an array\n\n  var addAllClasses = ['blog_post']; // className prop checking\n\n  if (className) {\n    addAllClasses.push(className);\n  }\n\n  return __jsx(\"div\", {\n    className: addAllClasses.join(' '),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"thumbnail\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, __jsx(\"img\", {\n    src: thumbUrl,\n    alt: title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  })), __jsx(\"div\", {\n    className: \"content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, __jsx(\"h3\", {\n    className: \"title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, title), __jsx(\"p\", {\n    className: \"excerpt\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, excerpt), link && __jsx(\"div\", {\n    className: \"learn_more\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, link)));\n};\n\nBlogPost.propTypes = {\n  className: PropTypes.string,\n  thumbUrl: PropTypes.string,\n  title: PropTypes.string,\n  excerpt: PropTypes.string,\n  link: PropTypes.element\n};\nexport default BlogPost;","map":{"version":3,"sources":["/Users/developer1/apps/giadFrontend/package/common/src/components/BlogPost/index.js"],"names":["BlogPost","className","thumbUrl","title","excerpt","link","addAllClasses","PropTypes","element"],"mappings":";;AAAA,OAAA,KAAA,MAAA,OAAA;AACA,OAAA,SAAA,MAAA,YAAA;;AAEA,IAAMA,QAAQ,GAAG,SAAXA,QAAW,CAAA,IAAA,EAAmD;AAAA,MAAhDC,SAAgD,GAAA,IAAA,CAAhDA,SAAgD;AAAA,MAArCC,QAAqC,GAAA,IAAA,CAArCA,QAAqC;AAAA,MAA3BC,KAA2B,GAAA,IAAA,CAA3BA,KAA2B;AAAA,MAApBC,OAAoB,GAAA,IAAA,CAApBA,OAAoB;AAAA,MAAXC,IAAW,GAAA,IAAA,CAAXA,IAAW,CAAA,CAClE;;AACA,MAAMC,aAAa,GAAG,CAF4C,WAE5C,CAAtB,CAFkE,CAIlE;;AACA,MAAA,SAAA,EAAe;AACbA,IAAAA,aAAa,CAAbA,IAAAA,CAAAA,SAAAA;AACD;;AAED,SACE,KAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAEA,aAAa,CAAbA,IAAAA,CAAhB,GAAgBA,CAAhB;AAAA,IAAA,QAAA,EAAA;AAAA,MAAA,QAAA,EAAA,YAAA;AAAA,MAAA,UAAA,EAAA;AAAA,KAAA;AAAA,IAAA,MAAA,EAAA;AAAA,GAAA,EACE,KAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAd,WAAA;AAAA,IAAA,QAAA,EAAA;AAAA,MAAA,QAAA,EAAA,YAAA;AAAA,MAAA,UAAA,EAAA;AAAA,KAAA;AAAA,IAAA,MAAA,EAAA;AAAA,GAAA,EACE,KAAA,CAAA,KAAA,EAAA;AAAK,IAAA,GAAG,EAAR,QAAA;AAAoB,IAAA,GAAG,EAAvB,KAAA;AAAA,IAAA,QAAA,EAAA;AAAA,MAAA,QAAA,EAAA,YAAA;AAAA,MAAA,UAAA,EAAA;AAAA,KAAA;AAAA,IAAA,MAAA,EAAA;AAAA,GAAA,CADF,CADF,EAIE,KAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAd,SAAA;AAAA,IAAA,QAAA,EAAA;AAAA,MAAA,QAAA,EAAA,YAAA;AAAA,MAAA,UAAA,EAAA;AAAA,KAAA;AAAA,IAAA,MAAA,EAAA;AAAA,GAAA,EACE,KAAA,CAAA,IAAA,EAAA;AAAI,IAAA,SAAS,EAAb,OAAA;AAAA,IAAA,QAAA,EAAA;AAAA,MAAA,QAAA,EAAA,YAAA;AAAA,MAAA,UAAA,EAAA;AAAA,KAAA;AAAA,IAAA,MAAA,EAAA;AAAA,GAAA,EADF,KACE,CADF,EAEE,KAAA,CAAA,GAAA,EAAA;AAAG,IAAA,SAAS,EAAZ,SAAA;AAAA,IAAA,QAAA,EAAA;AAAA,MAAA,QAAA,EAAA,YAAA;AAAA,MAAA,UAAA,EAAA;AAAA,KAAA;AAAA,IAAA,MAAA,EAAA;AAAA,GAAA,EAFF,OAEE,CAFF,EAGGD,IAAI,IAAI,KAAA,CAAA,KAAA,EAAA;AAAK,IAAA,SAAS,EAAd,YAAA;AAAA,IAAA,QAAA,EAAA;AAAA,MAAA,QAAA,EAAA,YAAA;AAAA,MAAA,UAAA,EAAA;AAAA,KAAA;AAAA,IAAA,MAAA,EAAA;AAAA,GAAA,EARf,IAQe,CAHX,CAJF,CADF;AATF,CAAA;;AAuBAL,QAAQ,CAARA,SAAAA,GAAqB;AACnBC,EAAAA,SAAS,EAAEM,SAAS,CADD,MAAA;AAEnBL,EAAAA,QAAQ,EAAEK,SAAS,CAFA,MAAA;AAGnBJ,EAAAA,KAAK,EAAEI,SAAS,CAHG,MAAA;AAInBH,EAAAA,OAAO,EAAEG,SAAS,CAJC,MAAA;AAKnBF,EAAAA,IAAI,EAAEE,SAAS,CAACC;AALG,CAArBR;AAQA,eAAA,QAAA","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst BlogPost = ({ className, thumbUrl, title, excerpt, link }) => {\r\n  // Add all classs to an array\r\n  const addAllClasses = ['blog_post'];\r\n\r\n  // className prop checking\r\n  if (className) {\r\n    addAllClasses.push(className);\r\n  }\r\n\r\n  return (\r\n    <div className={addAllClasses.join(' ')}>\r\n      <div className=\"thumbnail\">\r\n        <img src={thumbUrl} alt={title} />\r\n      </div>\r\n      <div className=\"content\">\r\n        <h3 className=\"title\">{title}</h3>\r\n        <p className=\"excerpt\">{excerpt}</p>\r\n        {link && <div className=\"learn_more\">{link}</div>}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nBlogPost.propTypes = {\r\n  className: PropTypes.string,\r\n  thumbUrl: PropTypes.string,\r\n  title: PropTypes.string,\r\n  excerpt: PropTypes.string,\r\n  link: PropTypes.element,\r\n};\r\n\r\nexport default BlogPost;\r\n"]},"metadata":{},"sourceType":"module"}