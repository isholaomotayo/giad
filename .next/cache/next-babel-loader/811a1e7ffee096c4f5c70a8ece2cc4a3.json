{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/developer1/apps/giadFrontend/package/reusecore/src/elements/Loader/index.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport LoaderStyle from './loader.style';\n\nconst Loader = _ref => {\n  let {\n    loaderColor,\n    className\n  } = _ref,\n      props = _objectWithoutProperties(_ref, [\"loaderColor\", \"className\"]); // Add all classs to an array\n\n\n  const addAllClasses = ['reusecore__loader']; // className prop checking\n\n  if (className) {\n    addAllClasses.push(className);\n  }\n\n  return __jsx(LoaderStyle, _extends({\n    className: addAllClasses.join(' '),\n    loaderColor: loaderColor\n  }, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }));\n};\n\nLoader.propTypes = {\n  /** ClassName of the Loader */\n  className: PropTypes.string,\n\n  /** Set loader width in number || string */\n  width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\n  /** Set loader height in number || string */\n  height: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n\n  /** Set color for loader */\n  loaderColor: PropTypes.string\n};\nLoader.defaultProps = {};\nexport default Loader;","map":{"version":3,"sources":["/Users/developer1/apps/giadFrontend/package/reusecore/src/elements/Loader/index.js"],"names":["Loader","className","props","addAllClasses","loaderColor","PropTypes","width","height","string"],"mappings":";;;;AAAA,OAAA,KAAA,MAAA,OAAA;AACA,OAAA,SAAA,MAAA,YAAA;AACA,OAAA,WAAA,MAAA,gBAAA;;AAEA,MAAMA,MAAM,GAAG,IAAA,IAA0C;AAAA,MAAzC;AAAA,IAAA,WAAA;AAAeC,IAAAA;AAAf,MAAyC,IAAA;AAAA,MAAZC,KAAY,GAAA,wBAAA,CAAA,IAAA,EAAA,CAAA,aAAA,EAAA,WAAA,CAAA,CAAA,CAAA,CACvD;;;AACA,QAAMC,aAAa,GAAG,CAFiC,mBAEjC,CAAtB,CAFuD,CAIvD;;AACA,MAAA,SAAA,EAAe;AACbA,IAAAA,aAAa,CAAbA,IAAAA,CAAAA,SAAAA;AACD;;AACD,SACE,KAAA,CAAA,WAAA,EAAA,QAAA,CAAA;AACE,IAAA,SAAS,EAAEA,aAAa,CAAbA,IAAAA,CADb,GACaA,CADb;AAEE,IAAA,WAAW,EAAEC;AAFf,GAAA,EAAA,KAAA,EAAA;AAAA,IAAA,QAAA,EAAA;AAAA,MAAA,QAAA,EAAA,YAAA;AAAA,MAAA,UAAA,EAAA;AAAA,KAAA;AAAA,IAAA,MAAA,EAAA;AAAA,GAAA,CAAA,CADF;AARF,CAAA;;AAiBAJ,MAAM,CAANA,SAAAA,GAAmB;AACjB;AACAC,EAAAA,SAAS,EAAEI,SAAS,CAFH,MAAA;;AAIjB;AACAC,EAAAA,KAAK,EAAED,SAAS,CAATA,SAAAA,CAAoB,CAACA,SAAS,CAAV,MAAA,EAAmBA,SAAS,CALtC,MAKU,CAApBA,CALU;;AAOjB;AACAE,EAAAA,MAAM,EAAEF,SAAS,CAATA,SAAAA,CAAoB,CAACA,SAAS,CAAV,MAAA,EAAmBA,SAAS,CARvC,MAQW,CAApBA,CARS;;AAUjB;AACAD,EAAAA,WAAW,EAAEC,SAAS,CAACG;AAXN,CAAnBR;AAcAA,MAAM,CAANA,YAAAA,GAAAA,EAAAA;AAEA,eAAA,MAAA","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport LoaderStyle from './loader.style';\r\n\r\nconst Loader = ({ loaderColor, className, ...props }) => {\r\n  // Add all classs to an array\r\n  const addAllClasses = ['reusecore__loader'];\r\n\r\n  // className prop checking\r\n  if (className) {\r\n    addAllClasses.push(className);\r\n  }\r\n  return (\r\n    <LoaderStyle\r\n      className={addAllClasses.join(' ')}\r\n      loaderColor={loaderColor}\r\n      {...props}\r\n    />\r\n  );\r\n};\r\n\r\nLoader.propTypes = {\r\n  /** ClassName of the Loader */\r\n  className: PropTypes.string,\r\n\r\n  /** Set loader width in number || string */\r\n  width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n\r\n  /** Set loader height in number || string */\r\n  height: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n\r\n  /** Set color for loader */\r\n  loaderColor: PropTypes.string\r\n};\r\n\r\nLoader.defaultProps = {};\r\n\r\nexport default Loader;\r\n"]},"metadata":{},"sourceType":"module"}