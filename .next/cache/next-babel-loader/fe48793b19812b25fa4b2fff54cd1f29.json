{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Fragment, Component } from 'react';\nimport Head from 'next/head';\nimport Sticky from 'react-stickynode';\nimport { ThemeProvider } from 'styled-components';\nimport { charityTheme } from '../common/src/theme/charity';\nimport { ResetCSS } from '../common/src/assets/css/style';\nimport { DrawerProvider } from '../common/src/contexts/DrawerContext';\nimport Navbar from '../containers/Charity/Navbar';\nimport DrawerSection from '../containers/Charity/DrawerSection';\nimport BannerSection from '../containers/Charity/BannerSection';\nimport FeatureSection from '../containers/Charity/FeatureSection';\nimport BranchSection from '../containers/Charity/BranchSection';\nimport WorkSection from '../containers/Charity/WorkSection';\nimport PromotionBlock from '../containers/Charity/PromotionBlock';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport TextField from '@material-ui/core/TextField';\nimport Footer from '../containers/Charity/Footer';\nimport Container from '../common/src/components/UI/Container';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport PaystackButton from 'react-paystack';\nimport { GlobalStyle, CharityWrapper, ContentWrapper } from '../containers/Charity/charity.style';\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1)\n  },\n  dense: {\n    marginTop: theme.spacing(2)\n  },\n  menu: {\n    width: 200\n  }\n}));\n\nconst Register = ({\n  row,\n  col\n}, shows) => {\n  const classes = useStyles();\n  const [values, setValues] = React.useState({\n    firstname: '',\n    middlename: '',\n    lastname: ''\n  });\n\n  const handleChange = name => event => {\n    setValues(_objectSpread({}, values, {\n      [name]: event.target.value\n    }));\n  };\n\n  return __jsx(ThemeProvider, {\n    theme: charityTheme\n  }, __jsx(Fragment, null, __jsx(Head, null, __jsx(\"title\", null, \"GIAD | Global Initiative Axgainst Disasters\"), __jsx(\"meta\", {\n    name: \"Description\",\n    content: \"GIAD | Global Initiative Axgainst Disasters\"\n  }), __jsx(\"meta\", {\n    name: \"theme-color\",\n    content: \"#0071bc\"\n  }), __jsx(\"meta\", {\n    name: \"viewport\",\n    content: \"width=device-width, initial-scale=1.0\"\n  }), __jsx(\"link\", {\n    href: \"https://fonts.googleapis.com/css?family=Open+Sans:300,400,600,700,800&display=swap\",\n    rel: \"stylesheet\"\n  })), __jsx(ResetCSS, null), __jsx(GlobalStyle, null), __jsx(CharityWrapper, null, __jsx(Sticky, {\n    top: 0,\n    innerZ: 9999,\n    activeClass: \"sticky-nav-active\"\n  }, __jsx(Navbar, null)), __jsx(DrawerProvider, null, __jsx(DrawerSection, null)), __jsx(ContentWrapper, null, __jsx(PromotionBlock, null), __jsx(Container, {\n    width: \"1260px\"\n  }, __jsx(\"form\", {\n    className: classes.container,\n    autoComplete: \"off\"\n  }, __jsx(TextField, {\n    id: \"outlined-name\",\n    label: \"First Name\",\n    className: classes.textField,\n    value: values.firstname,\n    onChange: handleChange('firstname'),\n    margin: \"normal\",\n    variant: \"outlined\"\n  }), __jsx(TextField, {\n    id: \"outlined-name\",\n    label: \"Middle Name\",\n    className: classes.textField,\n    value: values.middlename,\n    onChange: handleChange('middlename'),\n    margin: \"normal\",\n    variant: \"outlined\"\n  }), __jsx(TextField, {\n    id: \"outlined-name\",\n    label: \"Last Name\",\n    className: classes.textField,\n    value: values.lastname,\n    onChange: handleChange('lastname'),\n    margin: \"normal\",\n    variant: \"outlined\"\n  }), __jsx(\"br\", null), __jsx(TextField, {\n    id: \"outlined-name\",\n    label: \"Phone Number\",\n    className: classes.textField,\n    value: values.phone,\n    onChange: handleChange('phone'),\n    margin: \"normal\",\n    variant: \"outlined\"\n  }), __jsx(TextField, {\n    id: \"outlined-name\",\n    label: \"email\",\n    className: classes.textField,\n    value: values.email,\n    onChange: handleChange('email'),\n    margin: \"normal\",\n    variant: \"outlined\"\n  }), __jsx(TextField, {\n    id: \"outlined-full-width\",\n    label: \"Permanent Residential address\",\n    style: {\n      margin: 8\n    },\n    placeholder: \"Permanent Residential address\",\n    fullWidth: true,\n    margin: \"normal\",\n    variant: \"outlined\",\n    InputLabelProps: {\n      shrink: true\n    }\n  })), __jsx(Payment, null))), __jsx(Footer, null))));\n}; // Index.getInitialProps = async function({ ctx }) {\n//   const res = await fetch('https://api.tvmaze.com/search/shows?q=batman');\n//   const data = await res.json();\n//   console.log(`Show data fetched. Count: ${data.length}`);\n//   return {\n//     shows: data.map(entry => entry.show)\n//   };\n// };\n// PromotionBlock style props\n\n\n// PromotionBlock default style\nRegister.defaultProps = {\n  // PromotionBlock row default style\n  row: {\n    flexBox: true,\n    flexWrap: 'wrap',\n    ml: '-15px',\n    mr: '-15px'\n  },\n  // PromotionBlock col default style\n  col: {\n    width: ['100%', '50%', '50%'],\n    pl: '15px',\n    pr: '15px',\n    mb: '30px'\n  }\n};\nexport default Register;\n\nclass Payment extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      key: 'pk_live_efd0e8585b6a1467dfd3f439385842a18223080b',\n      //PAYSTACK PUBLIC KEY\n      email: 'user@pacmgiad.com',\n      // customer email\n      amount: 5000000 //equals NGN100,\n\n    });\n\n    _defineProperty(this, \"callback\", response => {\n      console.log(response); // card charged successfully, get reference here\n    });\n\n    _defineProperty(this, \"close\", () => {\n      console.log('Payment closed');\n    });\n\n    _defineProperty(this, \"getReference\", () => {\n      //you can put any unique reference implementation code here\n      let text = '';\n      let possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-.=';\n\n      for (let i = 0; i < 15; i++) text += possible.charAt(Math.floor(Math.random() * possible.length));\n\n      return text;\n    });\n  }\n\n  render() {\n    return __jsx(\"div\", null, __jsx(PaystackButton, {\n      class: \"butn\",\n      text: \"Register\",\n      callback: this.callback,\n      close: this.close,\n      disabled: false,\n      embed: false,\n      reference: this.getReference(),\n      email: this.state.email,\n      amount: this.state.amount,\n      paystackkey: this.state.key,\n      tag: \"button\"\n    }));\n  }\n\n}","map":null,"metadata":{},"sourceType":"module"}