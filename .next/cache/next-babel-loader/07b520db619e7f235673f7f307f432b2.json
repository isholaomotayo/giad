{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component, useState } from 'react';\nimport { Mutation } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport Router from 'next/router';\nimport Form from './styles/Form';\nimport Error from './ErrorMessage';\nimport { CURRENT_USER_QUERY } from './User';\nimport Link from 'next/link';\nimport Box from '../reusecore/src/elements/Box';\nimport Text from '../reusecore/src/elements/Text';\nimport SectionWrapper, { ContentArea, Heading, ButtonGroup, DonationForm, DonateButton } from '../containers/Charity/DonateSection/donateSection.style';\nimport Container from '../common/src/components/UI/Container';\nimport Input from '../common/src/components/Input';\nconst SIGNIN_MUTATION = gql`\n  mutation SIGNIN_MUTATION($email: String!, $password: String!) {\n    signin(email: $email, password: $password) {\n      id\n      email\n      name\n    }\n  }\n`;\nconst SIGNUP_MUTATION = gql`\n  mutation SIGNUP_MUTATION(\n    $email: String!\n    $name: String!\n    $password: String!\n  ) {\n    signup(email: $email, name: $name, password: $password) {\n      id\n      email\n      name\n    }\n  }\n`;\n\nclass Signin extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      name: '',\n      password: '',\n      email: '',\n      active: 'signin'\n    });\n\n    _defineProperty(this, \"saveToState\", e => {\n      this.setState({\n        [e.target.name]: e.target.value\n      });\n    });\n\n    _defineProperty(this, \"handleFormData\", (value, name) => {\n      this.setState(_objectSpread({}, this.state, {\n        [name]: value\n      }));\n    });\n\n    _defineProperty(this, \"handleDonation\", e => {\n      e.preventDefault();\n      console.log('Donation form data: ', state);\n    });\n  }\n\n  render() {\n    const {\n      row,\n      col\n    } = this.props;\n    return __jsx(React.Fragment, null, __jsx(Mutation, {\n      mutation: SIGNIN_MUTATION,\n      variables: this.state,\n      refetchQueries: [{\n        query: CURRENT_USER_QUERY\n      }]\n    }, (signup, {\n      error,\n      loading\n    }) => __jsx(SectionWrapper, {\n      id: \"signup\"\n    }, __jsx(Container, {\n      width: \"1260px\"\n    }, __jsx(Box, _extends({\n      className: \"row\"\n    }, row), __jsx(Box, _extends({\n      className: \"col\"\n    }, col), __jsx(ContentArea, null, __jsx(Heading, null, \"Create an account\", ' ', __jsx(\"span\", null, \"or Sigin in with your exisiting account\")), __jsx(ButtonGroup, null, __jsx(\"div\", {\n      style: {\n        cursor: 'pointer'\n      },\n      onClick: e => {\n        e.preventDefault;\n        this.setState({\n          active: 'signup'\n        });\n      }\n    }, __jsx(\"a\", {\n      className: \"learn__more-btn alt\"\n    }, __jsx(\"span\", {\n      className: \"hyphen\"\n    }), __jsx(\"span\", {\n      className: \"btn_text\"\n    }, \"Create an Account\"))), __jsx(Text, {\n      content: \"or\"\n    }), __jsx(\"div\", {\n      style: {\n        cursor: 'pointer'\n      },\n      onClick: e => {\n        e.preventDefault;\n        this.setState({\n          active: 'signin'\n        });\n      }\n    }, __jsx(\"a\", {\n      className: \"learn__more-btn alt\"\n    }, __jsx(\"span\", {\n      className: \"hyphen\"\n    }), __jsx(\"span\", {\n      className: \"btn_text\"\n    }, \"Signin with your account\")))))), __jsx(Box, _extends({\n      className: \"col\"\n    }, col), __jsx(DonationForm, {\n      style: this.state.active === 'signin' ? {\n        display: 'block'\n      } : {\n        display: 'none'\n      },\n      method: \"post\",\n      onSubmit: async e => {\n        e.preventDefault();\n        await signup();\n        Router.push('/register');\n        this.setState({\n          name: '',\n          email: '',\n          password: ''\n        });\n      }\n    }, __jsx(\"h4\", null, \"Login to your account\"), \" \", __jsx(Error, {\n      error: error\n    }), __jsx(Input, {\n      inputType: \"email\",\n      placeholder: \"E-mail address\",\n      inputValue: this.state.email,\n      inputOnChange: e => this.handleFormData(e.target.value, 'email')\n    }), __jsx(\"div\", null, \"\\xA0\"), __jsx(Input, {\n      inputType: \"password\",\n      placeholder: \"password\",\n      inputValue: this.state.password,\n      inputOnChange: e => this.handleFormData(e.target.value, 'password')\n    }), __jsx(DonateButton, {\n      type: \"submit\"\n    }, \"Login \")), __jsx(Mutation, {\n      mutation: SIGNUP_MUTATION,\n      variables: this.state,\n      refetchQueries: [{\n        query: CURRENT_USER_QUERY\n      }]\n    }, (signup, {\n      error,\n      loading\n    }) => __jsx(DonationForm, {\n      style: this.state.active === 'signup' ? {\n        display: 'block'\n      } : {\n        display: 'none'\n      },\n      method: \"post\",\n      onSubmit: async e => {\n        e.preventDefault();\n        await signup();\n        Router.push('/register');\n        this.setState({\n          name: '',\n          email: '',\n          password: ''\n        });\n      }\n    }, ' ', __jsx(\"h4\", null, \"Create a new account\"), __jsx(Error, {\n      error: error\n    }), __jsx(Input, {\n      inputType: \"name\",\n      placeholder: \"Full name\",\n      inputValue: this.state.name,\n      inputOnChange: e => this.handleFormData(e.target.value, 'name')\n    }), __jsx(\"div\", null, \"\\xA0\"), __jsx(Input, {\n      inputType: \"email\",\n      placeholder: \"E-mail address\",\n      inputValue: this.state.email,\n      inputOnChange: e => this.handleFormData(e.target.value, 'email')\n    }), __jsx(\"div\", null, \"\\xA0\"), __jsx(Input, {\n      inputType: \"password\",\n      placeholder: \"password\",\n      inputValue: this.state.password,\n      inputOnChange: e => this.handleFormData(e.target.value, 'password')\n    }), __jsx(DonateButton, {\n      type: \"submit\"\n    }, \"Create Account\", ' '))), \";\"))))));\n  }\n\n} // DonateSection style props\n\n\n// DonateSection default style\nSignin.defaultProps = {\n  // Signin row default style\n  row: {\n    flexBox: true,\n    flexWrap: 'wrap',\n    ml: '-15px',\n    mr: '-15px'\n  },\n  // Signin col default style\n  col: {\n    width: ['100%', '50%', '50%'],\n    pl: '15px',\n    pr: '15px',\n    mb: '30px'\n  }\n};\nexport default Signin;","map":null,"metadata":{},"sourceType":"module"}