{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport { Query, Mutation } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport { adopt } from 'react-adopt';\nimport User from './User';\nimport CartStyles from './styles/CartStyles';\nimport Supreme from './styles/Supreme';\nimport CloseButton from './styles/CloseButton';\nimport SickButton from './styles/SickButton';\nimport CartItem from './CartItem';\nimport calcTotalPrice from '../lib/calcTotalPrice';\nimport formatMoney from '../lib/formatMoney';\nimport TakeMyMoney from './TakeMyMoney';\nconst LOCAL_STATE_QUERY = gql`\n  query {\n    cartOpen @client\n  }\n`;\nconst TOGGLE_CART_MUTATION = gql`\n  mutation {\n    toggleCart @client\n  }\n`;\n/* eslint-disable */\n\nconst Composed = adopt({\n  user: ({\n    render\n  }) => __jsx(User, null, render),\n  toggleCart: ({\n    render\n  }) => __jsx(Mutation, {\n    mutation: TOGGLE_CART_MUTATION\n  }, render),\n  localState: ({\n    render\n  }) => __jsx(Query, {\n    query: LOCAL_STATE_QUERY\n  }, render)\n});\n/* eslint-enable */\n\nconst Cart = () => __jsx(Composed, null, ({\n  user,\n  toggleCart,\n  localState\n}) => {\n  const me = user.data ? user.data.me : null;\n  if (!me) return null;\n  return __jsx(CartStyles, {\n    open: localState.data.cartOpen\n  }, __jsx(\"header\", null, __jsx(CloseButton, {\n    onClick: toggleCart,\n    title: \"close\"\n  }, \"\\xD7\"), __jsx(Supreme, null, me.name, \"'s Cart\"), __jsx(\"p\", null, \"You Have \", me.cart.length, \" Item\", me.cart.length === 1 ? '' : 's', \" in your cart.\")), __jsx(\"ul\", null, me.cart.map(cartItem => __jsx(CartItem, {\n    key: cartItem.id,\n    cartItem: cartItem\n  }))), __jsx(\"footer\", null, __jsx(\"p\", null, formatMoney(calcTotalPrice(me.cart))), me.cart.length && __jsx(TakeMyMoney, null, __jsx(SickButton, null, \"Checkout\"))));\n});\n\nexport default Cart;\nexport { LOCAL_STATE_QUERY, TOGGLE_CART_MUTATION };","map":null,"metadata":{},"sourceType":"module"}