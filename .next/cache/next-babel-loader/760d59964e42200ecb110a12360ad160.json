{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = _Object$keys(object);\n\n  if (_Object$getOwnPropertySymbols) {\n    var symbols = _Object$getOwnPropertySymbols(object);\n\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return _Object$getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(source, true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (_Object$getOwnPropertyDescriptors) {\n      _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(source).forEach(function (key) {\n        _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nimport styled from 'styled-components';\nimport { variant } from 'styled-system';\nimport { colorStyle } from '../../theme/customVariant';\nimport { AnimSpinner } from '../Animation';\nimport { base } from '../base';\nvar LoaderStyle = styled.span.withConfig({\n  displayName: \"loaderstyle__LoaderStyle\",\n  componentId: \"sc-6byg9m-0\"\n})([\"display:inline-flex;width:14px;height:14px;border-radius:50%;overflow:hidden;border-width:2px;border-style:solid;border-color:\", \";border-top-color:transparent !important;\", \" \", \" \", \"\"], function (props) {\n  return props.loaderColor ? props.loaderColor : '#000000';\n}, AnimSpinner, colorStyle, base); // prop types can also be added from the style functions\n\nLoaderStyle.propTypes = _objectSpread({}, variant.propTypes);\nLoaderStyle.displayName = 'LoaderStyle';\nexport default LoaderStyle;","map":{"version":3,"sources":["/Users/developer1/apps/giadFrontend/package/reusecore/src/elements/Loader/loader.style.js"],"names":["LoaderStyle","styled","props","variant"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAA,MAAA,MAAA,mBAAA;AACA,SAAA,OAAA,QAAA,eAAA;AACA,SAAA,UAAA,QAAA,2BAAA;AACA,SAAA,WAAA,QAAA,cAAA;AACA,SAAA,IAAA,QAAA,SAAA;AAEA,IAAMA,WAAW,GAAGC,MAAM,CAAT,IAAGA,CAAH,UAAGA,CAAH;AAAA,EAAA,WAAA,EAAA,0BAAA;AAAA,EAAA,WAAA,EAAA;AAAA,CAAGA,EAAH,CAAA,gIAAA,EAAA,2CAAA,EAAA,GAAA,EAAA,GAAA,EAAA,EAAA,CAAGA,EASF,UAAA,KAAA,EAAK;AAAA,SAAKC,KAAK,CAALA,WAAAA,GAAoBA,KAAK,CAAzBA,WAAAA,GAAL,SAAA;AATN,CAAGD,EAAH,WAAGA,EAAH,UAAGA,EAApB,IAAoBA,CAApB,C,CAmBA;;AACAD,WAAW,CAAXA,SAAAA,GAAAA,aAAAA,CAAAA,EAAAA,EACKG,OAAO,CADZH,SAAAA,CAAAA;AAIAA,WAAW,CAAXA,WAAAA,GAAAA,aAAAA;AAEA,eAAA,WAAA","sourcesContent":["import styled from 'styled-components';\r\nimport { variant } from 'styled-system';\r\nimport { colorStyle } from '../../theme/customVariant';\r\nimport { AnimSpinner } from '../Animation';\r\nimport { base } from '../base';\r\n\r\nconst LoaderStyle = styled.span`\r\n  /* loader default style */\r\n  display: inline-flex;\r\n  width: 14px;\r\n  height: 14px;\r\n  border-radius: 50%;\r\n  overflow: hidden;\r\n  border-width: 2px;\r\n  border-style: solid;\r\n  border-color: ${props => (props.loaderColor ? props.loaderColor : '#000000')};\r\n  border-top-color: transparent !important;\r\n\r\n  /* animation goes here */\r\n  ${AnimSpinner}\r\n  /* Style system custome color variant */\r\n  ${colorStyle}\r\n  ${base}\r\n`;\r\n\r\n// prop types can also be added from the style functions\r\nLoaderStyle.propTypes = {\r\n  ...variant.propTypes\r\n};\r\n\r\nLoaderStyle.displayName = 'LoaderStyle';\r\n\r\nexport default LoaderStyle;\r\n"]},"metadata":{},"sourceType":"module"}