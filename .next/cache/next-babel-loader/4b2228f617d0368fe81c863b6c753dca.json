{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/developer1/apps/giadFrontend/package/components/TakeMyMoney.js\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation createOrder($token: String!) {\\n    createOrder(token: $token) {\\n      id\\n      charge\\n      total\\n      items {\\n        id\\n        title\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport StripeCheckout from 'react-stripe-checkout';\nimport { Mutation } from 'react-apollo';\nimport Router from 'next/router';\nimport NProgress from 'nprogress';\nimport PropTypes from 'prop-types';\nimport gql from 'graphql-tag';\nimport calcTotalPrice from '../lib/calcTotalPrice';\nimport Error from './ErrorMessage';\nimport User, { CURRENT_USER_QUERY } from './User';\nvar CREATE_ORDER_MUTATION = gql(_templateObject());\n\nfunction totalItems(cart) {\n  return cart.reduce(function (tally, cartItem) {\n    return tally + cartItem.quantity;\n  }, 0);\n}\n\nvar TakeMyMoney =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(TakeMyMoney, _React$Component);\n\n  function TakeMyMoney() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, TakeMyMoney);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(TakeMyMoney)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"onToken\",\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(res, createOrder) {\n        var order;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                NProgress.start(); // manually call the mutation once we have the stripe token\n\n                _context.next = 3;\n                return createOrder({\n                  variables: {\n                    token: res.id\n                  }\n                })[\"catch\"](function (err) {\n                  alert(err.message);\n                });\n\n              case 3:\n                order = _context.sent;\n                Router.push({\n                  pathname: '/order',\n                  query: {\n                    id: order.data.createOrder.id\n                  }\n                });\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x, _x2) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n\n    return _this;\n  }\n\n  _createClass(TakeMyMoney, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(User, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, function (_ref2) {\n        var me = _ref2.data.me,\n            loading = _ref2.loading;\n        if (loading) return null;\n        return __jsx(Mutation, {\n          mutation: CREATE_ORDER_MUTATION,\n          refetchQueries: [{\n            query: CURRENT_USER_QUERY\n          }],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }, function (createOrder) {\n          return __jsx(StripeCheckout, {\n            amount: calcTotalPrice(me ? me.cart : ''),\n            name: \"Sick Fits\",\n            description: \"Order of \".concat(totalItems(me.cart), \" items!\"),\n            image: me.cart.length && me.cart[0].item && me.cart[0].item.image,\n            stripeKey: \"pk_test_Vtknn6vSdcZWSG2JWvEiWSqC\",\n            currency: \"USD\",\n            email: me.email,\n            token: function token(res) {\n              return _this2.onToken(res, createOrder);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 57\n            },\n            __self: this\n          }, _this2.props.children);\n        });\n      });\n    }\n  }]);\n\n  return TakeMyMoney;\n}(React.Component);\n\nexport default TakeMyMoney;\nexport { CREATE_ORDER_MUTATION };","map":{"version":3,"sources":["/Users/developer1/apps/giadFrontend/package/components/TakeMyMoney.js"],"names":["React","StripeCheckout","Mutation","Router","NProgress","PropTypes","gql","calcTotalPrice","Error","User","CURRENT_USER_QUERY","CREATE_ORDER_MUTATION","totalItems","cart","reduce","tally","cartItem","quantity","TakeMyMoney","res","createOrder","start","variables","token","id","err","alert","message","order","push","pathname","query","data","me","loading","length","item","image","email","onToken","props","children","Component"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,cAAP,MAA2B,uBAA3B;AACA,SAASC,QAAT,QAAyB,cAAzB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,SAAP,MAAsB,WAAtB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,cAAP,MAA2B,uBAA3B;AACA,OAAOC,KAAP,MAAkB,gBAAlB;AACA,OAAOC,IAAP,IAAeC,kBAAf,QAAyC,QAAzC;AAEA,IAAMC,qBAAqB,GAAGL,GAAH,mBAA3B;;AAcA,SAASM,UAAT,CAAoBC,IAApB,EAA0B;AACxB,SAAOA,IAAI,CAACC,MAAL,CAAY,UAACC,KAAD,EAAQC,QAAR;AAAA,WAAqBD,KAAK,GAAGC,QAAQ,CAACC,QAAtC;AAAA,GAAZ,EAA4D,CAA5D,CAAP;AACD;;IAEKC,W;;;;;;;;;;;;;;;;;;;;;;;+BACM,iBAAOC,GAAP,EAAYC,WAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AACRhB,gBAAAA,SAAS,CAACiB,KAAV,GADQ,CAER;;AAFQ;AAAA,uBAGYD,WAAW,CAAC;AAC9BE,kBAAAA,SAAS,EAAE;AACTC,oBAAAA,KAAK,EAAEJ,GAAG,CAACK;AADF;AADmB,iBAAD,CAAX,UAIX,UAAAC,GAAG,EAAI;AACdC,kBAAAA,KAAK,CAACD,GAAG,CAACE,OAAL,CAAL;AACD,iBANmB,CAHZ;;AAAA;AAGFC,gBAAAA,KAHE;AAURzB,gBAAAA,MAAM,CAAC0B,IAAP,CAAY;AACVC,kBAAAA,QAAQ,EAAE,QADA;AAEVC,kBAAAA,KAAK,EAAE;AAAEP,oBAAAA,EAAE,EAAEI,KAAK,CAACI,IAAN,CAAWZ,WAAX,CAAuBI;AAA7B;AAFG,iBAAZ;;AAVQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;;6BAeD;AAAA;;AACP,aACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,iBAA+B;AAAA,YAApBS,EAAoB,SAA5BD,IAA4B,CAApBC,EAAoB;AAAA,YAAdC,OAAc,SAAdA,OAAc;AAC9B,YAAIA,OAAJ,EAAa,OAAO,IAAP;AACb,eACE,MAAC,QAAD;AACE,UAAA,QAAQ,EAAEvB,qBADZ;AAEE,UAAA,cAAc,EAAE,CAAC;AAAEoB,YAAAA,KAAK,EAAErB;AAAT,WAAD,CAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAIG,UAAAU,WAAW;AAAA,iBACV,MAAC,cAAD;AACE,YAAA,MAAM,EAAEb,cAAc,CAAC0B,EAAE,GAAGA,EAAE,CAACpB,IAAN,GAAa,EAAhB,CADxB;AAEE,YAAA,IAAI,EAAC,WAFP;AAGE,YAAA,WAAW,qBAAcD,UAAU,CAACqB,EAAE,CAACpB,IAAJ,CAAxB,YAHb;AAIE,YAAA,KAAK,EACHoB,EAAE,CAACpB,IAAH,CAAQsB,MAAR,IAAkBF,EAAE,CAACpB,IAAH,CAAQ,CAAR,EAAWuB,IAA7B,IAAqCH,EAAE,CAACpB,IAAH,CAAQ,CAAR,EAAWuB,IAAX,CAAgBC,KALzD;AAOE,YAAA,SAAS,EAAC,kCAPZ;AAQE,YAAA,QAAQ,EAAC,KARX;AASE,YAAA,KAAK,EAAEJ,EAAE,CAACK,KATZ;AAUE,YAAA,KAAK,EAAE,eAAAnB,GAAG;AAAA,qBAAI,MAAI,CAACoB,OAAL,CAAapB,GAAb,EAAkBC,WAAlB,CAAJ;AAAA,aAVZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAYG,MAAI,CAACoB,KAAL,CAAWC,QAZd,CADU;AAAA,SAJd,CADF;AAuBD,OA1BH,CADF;AA8BD;;;;EA/CuBzC,KAAK,CAAC0C,S;;AAkDhC,eAAexB,WAAf;AACA,SAASP,qBAAT","sourcesContent":["import React from 'react';\nimport StripeCheckout from 'react-stripe-checkout';\nimport { Mutation } from 'react-apollo';\nimport Router from 'next/router';\nimport NProgress from 'nprogress';\nimport PropTypes from 'prop-types';\nimport gql from 'graphql-tag';\nimport calcTotalPrice from '../lib/calcTotalPrice';\nimport Error from './ErrorMessage';\nimport User, { CURRENT_USER_QUERY } from './User';\n\nconst CREATE_ORDER_MUTATION = gql`\n  mutation createOrder($token: String!) {\n    createOrder(token: $token) {\n      id\n      charge\n      total\n      items {\n        id\n        title\n      }\n    }\n  }\n`;\n\nfunction totalItems(cart) {\n  return cart.reduce((tally, cartItem) => tally + cartItem.quantity, 0);\n}\n\nclass TakeMyMoney extends React.Component {\n  onToken = async (res, createOrder) => {\n    NProgress.start();\n    // manually call the mutation once we have the stripe token\n    const order = await createOrder({\n      variables: {\n        token: res.id\n      }\n    }).catch(err => {\n      alert(err.message);\n    });\n    Router.push({\n      pathname: '/order',\n      query: { id: order.data.createOrder.id }\n    });\n  };\n  render() {\n    return (\n      <User>\n        {({ data: { me }, loading }) => {\n          if (loading) return null;\n          return (\n            <Mutation\n              mutation={CREATE_ORDER_MUTATION}\n              refetchQueries={[{ query: CURRENT_USER_QUERY }]}\n            >\n              {createOrder => (\n                <StripeCheckout\n                  amount={calcTotalPrice(me ? me.cart : '')}\n                  name=\"Sick Fits\"\n                  description={`Order of ${totalItems(me.cart)} items!`}\n                  image={\n                    me.cart.length && me.cart[0].item && me.cart[0].item.image\n                  }\n                  stripeKey=\"pk_test_Vtknn6vSdcZWSG2JWvEiWSqC\"\n                  currency=\"USD\"\n                  email={me.email}\n                  token={res => this.onToken(res, createOrder)}\n                >\n                  {this.props.children}\n                </StripeCheckout>\n              )}\n            </Mutation>\n          );\n        }}\n      </User>\n    );\n  }\n}\n\nexport default TakeMyMoney;\nexport { CREATE_ORDER_MUTATION };\n"]},"metadata":{},"sourceType":"module"}