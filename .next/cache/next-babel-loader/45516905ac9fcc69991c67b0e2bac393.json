{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { Fragment } from 'react';\nimport { Modal } from '@redq/reuse-modal';\nimport '@redq/reuse-modal/es/index.css';\nimport { ApolloProvider } from 'react-apollo';\nimport withData from '../lib/withData';\nimport App, { Container } from 'next/app'; // const App = ({ Component, pageProps }) => {\n//   return (\n//     <Fragment>\n//       <Modal />\n//       <Component {...pageProps} />\n//     </Fragment>\n//   );\n// };\n// App.getInitialProps = async ({ Component, ctx }) => {\n//   let pageProps = {};\n//   if (Component.getInitialProps) {\n//     pageProps = await Component.getInitialProps(ctx);\n//   }\n//   return { pageProps };\n// };\n\nclass MyApp extends App {\n  static async getInitialProps({\n    Component,\n    ctx\n  }) {\n    let pageProps = {};\n\n    if (Component.getInitialProps) {\n      pageProps = await Component.getInitialProps(ctx);\n    } // this exposes the query to the user\n\n\n    pageProps.query = ctx.query;\n    return {\n      pageProps\n    };\n  }\n\n  render() {\n    const {\n      Component,\n      apollo,\n      pageProps\n    } = this.props;\n    return __jsx(Container, null, __jsx(ApolloProvider, {\n      client: apollo\n    }, __jsx(Fragment, null, __jsx(Modal, null), __jsx(Component, pageProps))));\n  }\n\n}\n\nexport default withData(MyApp);","map":null,"metadata":{},"sourceType":"module"}